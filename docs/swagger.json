{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the backend service for UBC UAS",
        "title": "GCOM Backend",
        "contact": {
            "name": "UBC UAS",
            "url": "https://ubcuas.com/",
            "email": "info@ubcuas.com"
        },
        "version": "1.0"
    },
    "host": "localhost:1323",
    "paths": {
        "/drone/home": {
            "post": {
                "description": "Updates the home waypoint",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Drone"
                ],
                "summary": "Updates the home waypoint",
                "parameters": [
                    {
                        "description": "Home Waypoint",
                        "name": "waypoints",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Waypoint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/drone/land": {
            "get": {
                "description": "Tells Drone to land",
                "tags": [
                    "Drone"
                ],
                "summary": "Take off Drone",
                "responses": {
                    "200": {
                        "description": "Command issued successfully",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Command failed to be issued",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/drone/lock": {
            "get": {
                "description": "Stops drone movement while preserving existing queue",
                "tags": [
                    "Drone"
                ],
                "summary": "Halts drone in place while preserving queue",
                "responses": {
                    "200": {
                        "description": "Drone locked successfully",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Drone unable to lock (already locked?)",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/drone/queue": {
            "get": {
                "description": "Returns queue in Mission Planner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drone"
                ],
                "summary": "Returns queue in Mission Planner",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Waypoint"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Sends a queue in Mission Planner",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Drone"
                ],
                "summary": "Sends a queue in Mission Planner",
                "parameters": [
                    {
                        "description": "Array of Waypoint Data",
                        "name": "waypoints",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Waypoint"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/drone/rtl": {
            "post": {
                "description": "Tells Drone to return home and land",
                "tags": [
                    "Drone"
                ],
                "summary": "Returns to Home and Lands",
                "responses": {
                    "200": {
                        "description": "RTL command issued successfully",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "RTL command encountered an error",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/drone/takeoff": {
            "post": {
                "description": "Tells Drone to takeoff",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Drone"
                ],
                "summary": "Take off Drone",
                "parameters": [
                    {
                        "description": "Takeoff Altitude",
                        "name": "altitude",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/drone/unlock": {
            "get": {
                "description": "Stops drone movement while preserving existing queue",
                "tags": [
                    "Drone"
                ],
                "summary": "Halts drone in place while preserving queue",
                "responses": {
                    "200": {
                        "description": "Drone unlocked successfully",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Drone unable to unlock (already unlocked?)",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/groundobject": {
            "post": {
                "description": "Create a singular ground object based on JSON, must have sentinel ID of \"-1\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroundObject"
                ],
                "summary": "Create a ground object",
                "parameters": [
                    {
                        "description": "Ground Object Data",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GroundObject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.SingleResponse-models_GroundObject"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON or Object Data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Creating GroundObject",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete multiple ground objects based on json body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroundObject"
                ],
                "summary": "Delete multiple ground objects",
                "parameters": [
                    {
                        "description": "Ground Object IDs",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success (returns a blank GroundObject)",
                        "schema": {
                            "$ref": "#/definitions/responses.SingleResponse-models_GroundObject"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON or object IDs",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Objects Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Deleting Objects",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groundobject/{id}": {
            "get": {
                "description": "Get a singular ground object based on path param",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroundObject"
                ],
                "summary": "Get a ground object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ground Object ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.SingleResponse-models_GroundObject"
                        }
                    },
                    "404": {
                        "description": "Object Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Querying GroundObject",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a singular ground object based on path param",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroundObject"
                ],
                "summary": "Delete a ground object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GroundObject ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success (returns a blank GroundObject)",
                        "schema": {
                            "$ref": "#/definitions/responses.SingleResponse-models_GroundObject"
                        }
                    },
                    "404": {
                        "description": "GroundObject Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Deleting GroundObject",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit a singular object based on path param and JSON",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroundObject"
                ],
                "summary": "Edit a ground object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GroundObject ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "example": "{\"color\": \"black\"}",
                        "description": "JSON fields",
                        "name": "fields",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.SingleResponse-models_GroundObject"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON or GroundObject ID",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "GroundObject Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Editing GroundObject",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groundobjects": {
            "get": {
                "description": "Get all ground objects in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroundObject"
                ],
                "summary": "Get all ground objects",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.MultipleResponse-models_GroundObject"
                        }
                    },
                    "500": {
                        "description": "Internal Error Querying GroundObjects",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create multiple ground objects based on JSON, all must have sentinel ID of \"-1\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GroundObject"
                ],
                "summary": "Create multiple ground objects",
                "parameters": [
                    {
                        "description": "Array of object Data",
                        "name": "objects",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GroundObject"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.MultipleResponse-models_GroundObject"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON or object Data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Creating GroundObject",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Get the current status of the drone",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drone"
                ],
                "summary": "Get drone status",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/models.Drone"
                        }
                    }
                }
            }
        },
        "/status/history": {
            "get": {
                "description": "Get drone status for the last 5 minutes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drone"
                ],
                "summary": "Get drone status history",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Drone"
                            }
                        }
                    }
                }
            }
        },
        "/waypoint": {
            "post": {
                "description": "Create a singular waypoint based on JSON, must have sentinel ID of \"-1\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Waypoint"
                ],
                "summary": "Create a waypoint",
                "parameters": [
                    {
                        "description": "Waypoint Data",
                        "name": "waypoint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Waypoint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.SingleResponse-models_Waypoint"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON or Waypoint Data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Creating Waypoint",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/waypoint/{id}": {
            "get": {
                "description": "Get a singular waypoint based on path param",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Waypoint"
                ],
                "summary": "Get a waypoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Waypoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.SingleResponse-models_Waypoint"
                        }
                    },
                    "404": {
                        "description": "Waypoint Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Querying Waypoint",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a singular waypoint based on path param",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Waypoint"
                ],
                "summary": "Delete a waypoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Waypoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success (returns a blank Waypoint)",
                        "schema": {
                            "$ref": "#/definitions/responses.SingleResponse-models_Waypoint"
                        }
                    },
                    "404": {
                        "description": "Waypoint Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Deleting Waypoint",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit a singular waypoint based on path param and JSON",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Waypoint"
                ],
                "summary": "Edit a waypoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Waypoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "example": "{\"name\": \"Whiskey}",
                        "description": "JSON fields",
                        "name": "fields",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.SingleResponse-models_Waypoint"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON or Waypoint ID",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Waypoint Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Editing Waypoint",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/waypoints": {
            "get": {
                "description": "Get all waypoints in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Waypoint"
                ],
                "summary": "Get all waypoints",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.MultipleResponse-models_Waypoint"
                        }
                    },
                    "500": {
                        "description": "Internal Error Querying Waypoints",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create multiple waypoints based on JSON, all must have sentinel ID of \"-1\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Waypoint"
                ],
                "summary": "Create multiple waypoints",
                "parameters": [
                    {
                        "description": "Array of Waypoint Data",
                        "name": "waypoints",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Waypoint"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.MultipleResponse-models_Waypoint"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON or Waypoint Data",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Creating Waypoint",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete multiple waypoints based on json body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Waypoint"
                ],
                "summary": "Delete multiple waypoints",
                "parameters": [
                    {
                        "description": "Waypoint IDs",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success (returns a blank Waypoint)",
                        "schema": {
                            "$ref": "#/definitions/responses.SingleResponse-models_Waypoint"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON or Waypoint IDs",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Waypoints Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Error Deleting Waypoint",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Designation": {
            "description": "Describes a special purpose for a Waypoint",
            "type": "string",
            "enum": [
                "launch",
                "land",
                "obstacle",
                "payload"
            ],
            "x-enum-varnames": [
                "Launch",
                "Land",
                "Obstacle",
                "Payload"
            ]
        },
        "models.Drone": {
            "description": "describes the drone being flown",
            "type": "object",
            "required": [
                "alt",
                "battery_voltage",
                "heading",
                "lat",
                "long",
                "speed",
                "timestamp",
                "v_speed"
            ],
            "properties": {
                "timestamp": {
                    "type": "integer",
                    "x-order": "1",
                    "example": 1698544781
                },
                "lat": {
                    "type": "number",
                    "x-order": "2",
                    "example": 49.267941
                },
                "long": {
                    "type": "number",
                    "x-order": "3",
                    "example": -123.24736
                },
                "alt": {
                    "type": "number",
                    "x-order": "4",
                    "example": 100
                },
                "v_speed": {
                    "type": "number",
                    "x-order": "5",
                    "example": -1.63
                },
                "speed": {
                    "type": "number",
                    "x-order": "6",
                    "example": 0.98
                },
                "heading": {
                    "type": "number",
                    "x-order": "7",
                    "example": 298.12
                },
                "battery_voltage": {
                    "description": "Payloads TBD",
                    "type": "number",
                    "x-order": "9",
                    "example": 2.6
                }
            }
        },
        "models.GroundObject": {
            "description": "describes targets in GCOM",
            "type": "object",
            "required": [
                "id",
                "lat",
                "long",
                "object_type"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "x-order": "1",
                    "example": "1"
                },
                "object_type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ObjectType"
                        }
                    ],
                    "x-order": "2",
                    "example": "emergent"
                },
                "lat": {
                    "type": "number",
                    "x-order": "3",
                    "example": 49.267941
                },
                "long": {
                    "type": "number",
                    "x-order": "4",
                    "example": -123.24736
                },
                "color": {
                    "type": "string"
                },
                "shape": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "textColor": {
                    "type": "string"
                }
            }
        },
        "models.ObjectType": {
            "type": "string",
            "enum": [
                "standard",
                "emergent"
            ],
            "x-enum-varnames": [
                "Standard",
                "Emergent"
            ]
        },
        "models.Waypoint": {
            "description": "describes a location in GCOM",
            "type": "object",
            "required": [
                "alt",
                "id",
                "lat",
                "long",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "To create a waypoint, ID of \"-1\" must be passed",
                    "type": "string",
                    "x-order": "1",
                    "example": "1"
                },
                "name": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Alpha"
                },
                "lat": {
                    "type": "number",
                    "x-order": "3",
                    "example": 49.267941
                },
                "long": {
                    "type": "number",
                    "x-order": "4",
                    "example": -123.24736
                },
                "alt": {
                    "type": "number",
                    "x-order": "5",
                    "example": 100
                },
                "radius": {
                    "description": "Radius around waypoint where it is considered flown over",
                    "type": "number",
                    "x-order": "6",
                    "example": 10
                },
                "designation": {
                    "description": "Designation of waypoint, none by default",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Designation"
                        }
                    ],
                    "x-order": "7",
                    "example": "land"
                },
                "remarks": {
                    "type": "string",
                    "x-order": "8",
                    "example": "Task 1 Landing Zone"
                }
            }
        },
        "responses.ErrorResponse": {
            "description": "JSON response for any error",
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "Sample error message"
                }
            }
        },
        "responses.MultipleResponse-models_GroundObject": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Sample success message"
                },
                "waypoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GroundObject"
                    }
                }
            }
        },
        "responses.MultipleResponse-models_Waypoint": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Sample success message"
                },
                "waypoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Waypoint"
                    }
                }
            }
        },
        "responses.SingleResponse-models_GroundObject": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Sample success message"
                },
                "waypoint": {
                    "$ref": "#/definitions/models.GroundObject"
                }
            }
        },
        "responses.SingleResponse-models_Waypoint": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Sample success message"
                },
                "waypoint": {
                    "$ref": "#/definitions/models.Waypoint"
                }
            }
        }
    }
}