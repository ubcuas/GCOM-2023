consumes:
- application/json
definitions:
  models.Designation:
    description: Describes a special purpose for a Waypoint
    enum:
    - launch
    - land
    - obstacle
    - payload
    type: string
    x-enum-varnames:
    - Launch
    - Land
    - Obstacle
    - Payload
  models.Drone:
    description: describes the drone being flown
    properties:
      alt:
        example: 100
        type: number
        x-order: "4"
      battery_voltage:
        description: Payloads TBD
        example: 2.6
        type: number
        x-order: "9"
      heading:
        example: 298.12
        type: number
        x-order: "7"
      lat:
        example: 49.267941
        type: number
        x-order: "2"
      long:
        example: -123.24736
        type: number
        x-order: "3"
      speed:
        example: 0.98
        type: number
        x-order: "6"
      timestamp:
        example: 1698544781
        type: integer
        x-order: "1"
      v_speed:
        example: -1.63
        type: number
        x-order: "5"
    required:
    - alt
    - battery_voltage
    - heading
    - lat
    - long
    - speed
    - timestamp
    - v_speed
    type: object
  models.GroundObject:
    description: describes targets in GCOM
    properties:
      color:
        type: string
      id:
        example: "1"
        type: string
        x-order: "1"
      lat:
        example: 49.267941
        type: number
        x-order: "3"
      long:
        example: -123.24736
        type: number
        x-order: "4"
      object_type:
        allOf:
        - $ref: '#/definitions/models.ObjectType'
        example: emergent
        x-order: "2"
      shape:
        type: string
      text:
        type: string
      textColor:
        type: string
    required:
    - id
    - lat
    - long
    - object_type
    type: object
  models.ObjectType:
    enum:
    - standard
    - emergent
    type: string
    x-enum-varnames:
    - Standard
    - Emergent
  models.Waypoint:
    description: describes a location in GCOM
    properties:
      alt:
        example: 100
        type: number
        x-order: "5"
      designation:
        allOf:
        - $ref: '#/definitions/models.Designation'
        description: Designation of waypoint, none by default
        example: land
        x-order: "7"
      id:
        description: To create a waypoint, ID of "-1" must be passed
        example: "1"
        type: string
        x-order: "1"
      lat:
        example: 49.267941
        type: number
        x-order: "3"
      long:
        example: -123.24736
        type: number
        x-order: "4"
      name:
        example: Alpha
        type: string
        x-order: "2"
      radius:
        description: Radius around waypoint where it is considered flown over
        example: 10
        type: number
        x-order: "6"
      remarks:
        example: Task 1 Landing Zone
        type: string
        x-order: "8"
    required:
    - alt
    - id
    - lat
    - long
    - name
    type: object
  responses.ErrorResponse:
    description: JSON response for any error
    properties:
      data:
        type: string
      message:
        example: Sample error message
        type: string
    type: object
  responses.MultipleResponse-models_GroundObject:
    properties:
      message:
        example: Sample success message
        type: string
      waypoints:
        items:
          $ref: '#/definitions/models.GroundObject'
        type: array
    type: object
  responses.MultipleResponse-models_Waypoint:
    properties:
      message:
        example: Sample success message
        type: string
      waypoints:
        items:
          $ref: '#/definitions/models.Waypoint'
        type: array
    type: object
  responses.SingleResponse-models_GroundObject:
    properties:
      message:
        example: Sample success message
        type: string
      waypoint:
        $ref: '#/definitions/models.GroundObject'
    type: object
  responses.SingleResponse-models_Waypoint:
    properties:
      message:
        example: Sample success message
        type: string
      waypoint:
        $ref: '#/definitions/models.Waypoint'
    type: object
host: localhost:1323
info:
  contact:
    email: info@ubcuas.com
    name: UBC UAS
    url: https://ubcuas.com/
  description: This is the backend service for UBC UAS
  title: GCOM Backend
  version: "1.0"
paths:
  /drone/home:
    post:
      consumes:
      - application/json
      description: Updates the home waypoint
      parameters:
      - description: Home Waypoint
        in: body
        name: waypoints
        required: true
        schema:
          $ref: '#/definitions/models.Waypoint'
      responses:
        "200":
          description: OK
      summary: Updates the home waypoint
      tags:
      - Drone
  /drone/land:
    get:
      description: Tells Drone to land
      responses:
        "200":
          description: Command issued successfully
          schema:
            type: body
        "500":
          description: Command failed to be issued
          schema:
            type: body
      summary: Take off Drone
      tags:
      - Drone
  /drone/lock:
    get:
      description: Stops drone movement while preserving existing queue
      responses:
        "200":
          description: Drone locked successfully
          schema:
            type: body
        "500":
          description: Drone unable to lock (already locked?)
          schema:
            type: body
      summary: Halts drone in place while preserving queue
      tags:
      - Drone
  /drone/queue:
    get:
      description: Returns queue in Mission Planner
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Waypoint'
            type: array
      summary: Returns queue in Mission Planner
      tags:
      - Drone
    post:
      consumes:
      - application/json
      description: Sends a queue in Mission Planner
      parameters:
      - description: Array of Waypoint Data
        in: body
        name: waypoints
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Waypoint'
          type: array
      responses:
        "200":
          description: OK
      summary: Sends a queue in Mission Planner
      tags:
      - Drone
  /drone/rtl:
    post:
      description: Tells Drone to return home and land
      responses:
        "200":
          description: RTL command issued successfully
          schema:
            type: body
        "500":
          description: RTL command encountered an error
          schema:
            type: body
      summary: Returns to Home and Lands
      tags:
      - Drone
  /drone/takeoff:
    post:
      consumes:
      - application/json
      description: Tells Drone to takeoff
      parameters:
      - description: Takeoff Altitude
        in: body
        name: altitude
        required: true
        schema:
          type: number
      responses:
        "200":
          description: OK
      summary: Take off Drone
      tags:
      - Drone
  /drone/unlock:
    get:
      description: Stops drone movement while preserving existing queue
      responses:
        "200":
          description: Drone unlocked successfully
          schema:
            type: body
        "500":
          description: Drone unable to unlock (already unlocked?)
          schema:
            type: body
      summary: Halts drone in place while preserving queue
      tags:
      - Drone
  /groundobject:
    delete:
      consumes:
      - application/json
      description: Delete multiple ground objects based on json body
      parameters:
      - description: Ground Object IDs
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Success (returns a blank GroundObject)
          schema:
            $ref: '#/definitions/responses.SingleResponse-models_GroundObject'
        "400":
          description: Invalid JSON or object IDs
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Objects Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Deleting Objects
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Delete multiple ground objects
      tags:
      - GroundObject
    post:
      consumes:
      - application/json
      description: Create a singular ground object based on JSON, must have sentinel
        ID of "-1"
      parameters:
      - description: Ground Object Data
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.GroundObject'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/responses.SingleResponse-models_GroundObject'
        "400":
          description: Invalid JSON or Object Data
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Creating GroundObject
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Create a ground object
      tags:
      - GroundObject
  /groundobject/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a singular ground object based on path param
      parameters:
      - description: GroundObject ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success (returns a blank GroundObject)
          schema:
            $ref: '#/definitions/responses.SingleResponse-models_GroundObject'
        "404":
          description: GroundObject Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Deleting GroundObject
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Delete a ground object
      tags:
      - GroundObject
    get:
      consumes:
      - application/json
      description: Get a singular ground object based on path param
      parameters:
      - description: Ground Object ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/responses.SingleResponse-models_GroundObject'
        "404":
          description: Object Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Querying GroundObject
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get a ground object
      tags:
      - GroundObject
    patch:
      consumes:
      - application/json
      description: Edit a singular object based on path param and JSON
      parameters:
      - description: GroundObject ID
        in: path
        name: id
        required: true
        type: integer
      - description: JSON fields
        example: '{"color": "black"}'
        in: body
        name: fields
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/responses.SingleResponse-models_GroundObject'
        "400":
          description: Invalid JSON or GroundObject ID
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: GroundObject Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Editing GroundObject
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Edit a ground object
      tags:
      - GroundObject
  /groundobjects:
    get:
      consumes:
      - application/json
      description: Get all ground objects in the database
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/responses.MultipleResponse-models_GroundObject'
        "500":
          description: Internal Error Querying GroundObjects
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get all ground objects
      tags:
      - GroundObject
    post:
      consumes:
      - application/json
      description: Create multiple ground objects based on JSON, all must have sentinel
        ID of "-1"
      parameters:
      - description: Array of object Data
        in: body
        name: objects
        required: true
        schema:
          items:
            $ref: '#/definitions/models.GroundObject'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/responses.MultipleResponse-models_GroundObject'
        "400":
          description: Invalid JSON or object Data
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Creating GroundObject
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Create multiple ground objects
      tags:
      - GroundObject
  /status:
    get:
      description: Get the current status of the drone
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.Drone'
      summary: Get drone status
      tags:
      - Drone
  /status/history:
    get:
      description: Get drone status for the last 5 minutes
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/models.Drone'
            type: array
      summary: Get drone status history
      tags:
      - Drone
  /waypoint:
    post:
      consumes:
      - application/json
      description: Create a singular waypoint based on JSON, must have sentinel ID
        of "-1"
      parameters:
      - description: Waypoint Data
        in: body
        name: waypoint
        required: true
        schema:
          $ref: '#/definitions/models.Waypoint'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/responses.SingleResponse-models_Waypoint'
        "400":
          description: Invalid JSON or Waypoint Data
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Creating Waypoint
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Create a waypoint
      tags:
      - Waypoint
  /waypoint/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a singular waypoint based on path param
      parameters:
      - description: Waypoint ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success (returns a blank Waypoint)
          schema:
            $ref: '#/definitions/responses.SingleResponse-models_Waypoint'
        "404":
          description: Waypoint Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Deleting Waypoint
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Delete a waypoint
      tags:
      - Waypoint
    get:
      consumes:
      - application/json
      description: Get a singular waypoint based on path param
      parameters:
      - description: Waypoint ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/responses.SingleResponse-models_Waypoint'
        "404":
          description: Waypoint Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Querying Waypoint
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get a waypoint
      tags:
      - Waypoint
    patch:
      consumes:
      - application/json
      description: Edit a singular waypoint based on path param and JSON
      parameters:
      - description: Waypoint ID
        in: path
        name: id
        required: true
        type: integer
      - description: JSON fields
        example: '{"name": "Whiskey}'
        in: body
        name: fields
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/responses.SingleResponse-models_Waypoint'
        "400":
          description: Invalid JSON or Waypoint ID
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Waypoint Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Editing Waypoint
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Edit a waypoint
      tags:
      - Waypoint
  /waypoints:
    delete:
      consumes:
      - application/json
      description: Delete multiple waypoints based on json body
      parameters:
      - description: Waypoint IDs
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Success (returns a blank Waypoint)
          schema:
            $ref: '#/definitions/responses.SingleResponse-models_Waypoint'
        "400":
          description: Invalid JSON or Waypoint IDs
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: Waypoints Not Found
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Deleting Waypoint
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Delete multiple waypoints
      tags:
      - Waypoint
    get:
      consumes:
      - application/json
      description: Get all waypoints in the database
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/responses.MultipleResponse-models_Waypoint'
        "500":
          description: Internal Error Querying Waypoints
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Get all waypoints
      tags:
      - Waypoint
    post:
      consumes:
      - application/json
      description: Create multiple waypoints based on JSON, all must have sentinel
        ID of "-1"
      parameters:
      - description: Array of Waypoint Data
        in: body
        name: waypoints
        required: true
        schema:
          items:
            $ref: '#/definitions/models.Waypoint'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/responses.MultipleResponse-models_Waypoint'
        "400":
          description: Invalid JSON or Waypoint Data
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "500":
          description: Internal Error Creating Waypoint
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      summary: Create multiple waypoints
      tags:
      - Waypoint
produces:
- application/json
swagger: "2.0"
